/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sportAcademy;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author Abdul Aziz
 */
public class StudentFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudentFrame
     */
    public StudentFrame(Student student) {
        this.student = student;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jLabel1 = new JLabel();
        jTabbedPane1 = new JTabbedPane();
        coachRecord = new JPanel();
        jScrollPane3 = new JScrollPane();
        jTable3 = new JTable();
        jButton1 = new JButton();
        coachIdSpinner = new JSpinner();
        nameLabel7 = new JLabel();
        nameLabel8 = new JLabel();
        ratingsSpinner = new JSpinner();
        sportRecord = new JPanel();
        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();
        accountSettings = new JPanel();
        stdName = new JTextField();
        nameLabel1 = new JLabel();
        nameLabel3 = new JLabel();
        centerCode = new JSpinner();
        foundCenterLabel = new JLabel();
        nameLabel2 = new JLabel();
        sportCode = new JSpinner();
        foundSportLabel = new JLabel();
        age = new JSpinner();
        nameLabel5 = new JLabel();
        nameLabel6 = new JLabel();
        stdAddress = new JTextField();
        stdPassword = new JPasswordField();
        nameLabel = new JLabel();
        jButton2 = new JButton();
        logout = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new AbsoluteLayout());

        jLabel1.setFont(new Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("Welcome to RCSAS");
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1, new AbsoluteConstraints(10, 40, 960, 70));

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        coachRecord.setName("coachRecord"); // NOI18N
        coachRecord.setLayout(new AbsoluteLayout());

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        DefaultTableModel coachTableModel = new DefaultTableModel(new Object[][] {},
            new String[]{"CoachID", "Name", "Sport Center Code", "Sport Code", "Ratings", "Give Ratings"});
        populateCoachTable(coachTableModel);
        jTable3.setModel(coachTableModel);
        jTable3.setName("jTable3"); // NOI18N
        jScrollPane3.setViewportView(jTable3);

        coachRecord.add(jScrollPane3, new AbsoluteConstraints(10, 22, 928, 230));

        jButton1.setText("Give Your Ratings");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        coachRecord.add(jButton1, new AbsoluteConstraints(440, 270, 120, 30));

        coachIdSpinner.setModel(new SpinnerNumberModel());
        coachIdSpinner.setName("coachIdSpinner"); // NOI18N
        coachRecord.add(coachIdSpinner, new AbsoluteConstraints(90, 270, 80, 30));

        nameLabel7.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel7.setText("CoachID:");
        nameLabel7.setName("nameLabel7"); // NOI18N
        coachRecord.add(nameLabel7, new AbsoluteConstraints(10, 270, 80, 30));

        nameLabel8.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel8.setText("Your Ratings:");
        nameLabel8.setName("nameLabel8"); // NOI18N
        coachRecord.add(nameLabel8, new AbsoluteConstraints(190, 270, 120, 30));

        ratingsSpinner.setModel(new SpinnerNumberModel(1, 1, 5, 1));
        ratingsSpinner.setName("ratingsSpinner"); // NOI18N
        coachRecord.add(ratingsSpinner, new AbsoluteConstraints(320, 270, 80, 30));

        jTabbedPane1.addTab("Coach Record", coachRecord);

        sportRecord.setName("sportRecord"); // NOI18N
        sportRecord.setLayout(new AbsoluteLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        DefaultTableModel sportTableModel = new DefaultTableModel(new Object[][] {},
            new String[]{"Code", "Name", "Fees", "Schedule"});
        populateSportTable(sportTableModel);
        jTable1.setModel(sportTableModel);
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        sportRecord.add(jScrollPane1, new AbsoluteConstraints(100, 40, 760, 180));

        jTabbedPane1.addTab("Sport Record", sportRecord);

        accountSettings.setName("accountSettings"); // NOI18N
        accountSettings.setLayout(new AbsoluteLayout());

        stdName.setName("stdName"); // NOI18N
        accountSettings.add(stdName, new AbsoluteConstraints(210, 10, 310, 30));

        nameLabel1.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel1.setText("Name:");
        nameLabel1.setName("nameLabel1"); // NOI18N
        accountSettings.add(nameLabel1, new AbsoluteConstraints(20, 10, 160, 30));

        nameLabel3.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel3.setText("Sport Center Code/ID:");
        nameLabel3.setName("nameLabel3"); // NOI18N
        accountSettings.add(nameLabel3, new AbsoluteConstraints(20, 50, 160, 30));

        centerCode.setModel(new SpinnerNumberModel());
        centerCode.setName("centerCode"); // NOI18N
        centerCode.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                centerCodeStateChanged(evt);
            }
        });
        accountSettings.add(centerCode, new AbsoluteConstraints(210, 50, 150, 30));

        foundCenterLabel.setText("No center found");
        foundCenterLabel.setName("foundCenterLabel"); // NOI18N
        accountSettings.add(foundCenterLabel, new AbsoluteConstraints(380, 60, 140, 20));

        nameLabel2.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel2.setText("Sport Code/ID:");
        nameLabel2.setName("nameLabel2"); // NOI18N
        accountSettings.add(nameLabel2, new AbsoluteConstraints(20, 90, 160, 30));

        sportCode.setModel(new SpinnerNumberModel());
        sportCode.setName("sportCode"); // NOI18N
        sportCode.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                sportCodeStateChanged(evt);
            }
        });
        accountSettings.add(sportCode, new AbsoluteConstraints(210, 90, 150, 30));

        foundSportLabel.setText("No sport found");
        foundSportLabel.setName("foundSportLabel"); // NOI18N
        accountSettings.add(foundSportLabel, new AbsoluteConstraints(380, 100, 140, 20));

        age.setModel(new SpinnerNumberModel());
        age.setName("age"); // NOI18N
        accountSettings.add(age, new AbsoluteConstraints(210, 130, 150, 30));

        nameLabel5.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel5.setText("Age:");
        nameLabel5.setName("nameLabel5"); // NOI18N
        accountSettings.add(nameLabel5, new AbsoluteConstraints(20, 130, 160, 30));

        nameLabel6.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel6.setText("Address:");
        nameLabel6.setName("nameLabel6"); // NOI18N
        accountSettings.add(nameLabel6, new AbsoluteConstraints(20, 170, 160, 30));

        stdAddress.setName("stdAddress"); // NOI18N
        stdAddress.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                stdAddressActionPerformed(evt);
            }
        });
        accountSettings.add(stdAddress, new AbsoluteConstraints(210, 170, 310, 30));

        stdPassword.setName("stdPassword"); // NOI18N
        accountSettings.add(stdPassword, new AbsoluteConstraints(210, 210, 180, 30));

        nameLabel.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        nameLabel.setText("Password");
        nameLabel.setName("nameLabel"); // NOI18N
        accountSettings.add(nameLabel, new AbsoluteConstraints(20, 210, 160, 30));

        jButton2.setText("Modify Rcord");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        accountSettings.add(jButton2, new AbsoluteConstraints(210, 270, 120, 30));

        jTabbedPane1.addTab("Account Settings", accountSettings);

        getContentPane().add(jTabbedPane1, new AbsoluteConstraints(10, 130, 960, 340));
        stdName.setText(student.getName());
        age.setValue(student.getAge());
        centerCode.setValue(student.getSportCenterCode());
        sportCode.setValue(student.getSportCode());
        stdAddress.setText(student.getAddress());
        stdPassword.setText(student.getPassword());

        logout.setText("Logout");
        logout.setName("logout"); // NOI18N
        logout.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout, new AbsoluteConstraints(890, 10, 70, 30));

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FileWriter fw = null;
        try {
            // TODO add your handling code here:
            int coachId = (int) coachIdSpinner.getValue();
            int ratings = (int) ratingsSpinner.getValue();
            if(Coach.findInDisk(coachId)==null){
                JOptionPane.showMessageDialog(StudentFrame.this, "Coach record doesn't exist");
                return ;
            }   System.out.println(coachId+", "+ratings);
            fw = new FileWriter("src/records/ratings.txt", true);
            fw.write(coachId+"#"+ratings+"\n");
            JOptionPane.showMessageDialog(StudentFrame.this, "Thank you for your feedback");
        } catch (IOException ex) {
            Logger.getLogger(StudentFrame.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(StudentFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void centerCodeStateChanged(ChangeEvent evt) {//GEN-FIRST:event_centerCodeStateChanged
        // TODO add your handling code here:
        SportCenter sp = SportCenter.findInDisk((int)centerCode.getValue());
        if(sp!=null){
            foundCenterLabel.setText(sp.getName());
        }
    }//GEN-LAST:event_centerCodeStateChanged

    private void sportCodeStateChanged(ChangeEvent evt) {//GEN-FIRST:event_sportCodeStateChanged
        // TODO add your handling code here:
        Sport sp = Sport.findInDisk((int)sportCode.getValue());
        if(sp!=null){
            foundSportLabel.setText(sp.getName());
        }
    }//GEN-LAST:event_sportCodeStateChanged

    private void stdAddressActionPerformed(ActionEvent evt) {//GEN-FIRST:event_stdAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stdAddressActionPerformed

    private void jButton2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(SportCenter.findInDisk((int)centerCode.getValue())==null){
            JOptionPane.showMessageDialog(null, "Sport Center record doesn't exist");
            return;
        }
        if(Sport.findInDisk((int)sportCode.getValue())==null){
            JOptionPane.showMessageDialog(null, "Sport record doesn't exits");
            return;
        }
        student.setName(stdName.getText());
        student.setAddress(stdAddress.getText());
        student.setSportCenterCode((int) centerCode.getValue());
        student.setSportCode((int)sportCode.getValue());
        student.setPassword(stdPassword.getText());
        if(Student.updateInDisk(student)){
            JOptionPane.showMessageDialog(null, "Updated Successfully");
        }
        else{
            JOptionPane.showMessageDialog(null, "Couldn't update, please try again");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void logoutActionPerformed(ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        StudentFrame.this.dispose();
        (new WelcomeFrom()).setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentFrame(new Student()).setVisible(true);
            }
        });
    }
    private void populateSportTable(DefaultTableModel sportTableModel){
        ArrayList<Sport> sportList = Sport.getAllSports();
        if(sportTableModel.getRowCount()>0){
            for(int i=0; i<sportTableModel.getRowCount(); i++){
                sportTableModel.removeRow(i);
            }
        }
        for(int i=0; i<sportList.size(); i++){
            Object[] row = new Object[4];
            row[0] = sportList.get(i).getCode();
            row[1] = sportList.get(i).getName();
            row[2] = sportList.get(i).getFees();
            row[3] = sportList.get(i).getSchedule();
            sportTableModel.addRow(row);
        }
    }
    private void populateCoachTable(DefaultTableModel coachTableModel){
        ArrayList<Coach> coachList = Coach.getAllCoaches();
        if(coachTableModel.getRowCount()>0){
            for(int i=0; i<coachTableModel.getRowCount(); i++){
                coachTableModel.removeRow(i);
            }
        }
        for(int i=0; i<coachList.size(); i++){
            final int coachId = coachList.get(i).getId();
            Object[] row = new Object[5];
            row[0] = coachList.get(i).getId();
            row[1] = coachList.get(i).getName();
            row[2] = coachList.get(i).getSportCenterCode();
            row[3] = coachList.get(i).getSportCode();
            row[4] = coachList.get(i).getRatings();
            coachTableModel.addRow(row);
        }
    }
    
    private Student student;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel accountSettings;
    private JSpinner age;
    private JSpinner centerCode;
    private JSpinner coachIdSpinner;
    private JPanel coachRecord;
    private JLabel foundCenterLabel;
    private JLabel foundSportLabel;
    private JButton jButton1;
    private JButton jButton2;
    private JLabel jLabel1;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane3;
    private JTabbedPane jTabbedPane1;
    private JTable jTable1;
    private JTable jTable3;
    private JButton logout;
    private JLabel nameLabel;
    private JLabel nameLabel1;
    private JLabel nameLabel2;
    private JLabel nameLabel3;
    private JLabel nameLabel5;
    private JLabel nameLabel6;
    private JLabel nameLabel7;
    private JLabel nameLabel8;
    private JSpinner ratingsSpinner;
    private JSpinner sportCode;
    private JPanel sportRecord;
    private JTextField stdAddress;
    private JTextField stdName;
    private JPasswordField stdPassword;
    // End of variables declaration//GEN-END:variables
}
